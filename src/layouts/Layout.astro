---
export interface Props {
  title: string;
}
import { Icon } from 'astro-icon';
const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,500;0,700;1,400;1,500;1,700&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
  </head>
  <body class={`min-h-screen`} style="font-family: 'DM Sans', sans-serif;">
    <div
      class="h-full flex justify-center dark:bg-[#101010] bg-white text-[#101010] dark:text-white"
    >
      <div
        class="relative max-w-[1080px] min-h-screen h-full dark:bg-neutral-900 w-[90%] border-x-[2px] border-neutral-200 dark:border-stone-800 flex flex-col items-center px-4 sm:px-6 md:px-16 py-6 text-left bg-neutral-100 gap-10"
      >
        <nav class="sticky top-0 flex justify-between w-full py-4 text-left">
          <img
            src="/profile.jpeg"
            alt="@probablyarth"
            width="64"
            height="64"
            class="rounded-full"
            style="box-shadow: 0 0 1px transparent;"
          />
          {console.log({ theme: localStorage.getItem('theme') })}
          <button id="themeToggle">
            <div id="moon">
              <Icon size="32" name="ph:moon-stars-fill" />
            </div>
            <div id="sun">
              <Icon size="32" name="ph:sun-fill" />
            </div>
          </button>
        </nav>
        <div class="w-full flex flex-col gap-8">
          <slot />
        </div>
      </div>
    </div>
  </body>
  <script>
    const themeToggleButton = document.getElementById('themeToggle');
    themeToggleButton?.addEventListener('click', handleThemeToggle);
    let theme = localStorage.getItem('theme');

    if (theme === 'dark') {
      document.getElementById('sun')?.classList.add('hidden');
      document.getElementById('moon')?.classList.remove('hidden');
      document.body.classList.add('dark');
    } else {
      document.body.classList.remove('dark');
      document.getElementById('sun')?.classList.remove('hidden');
      document.getElementById('moon')?.classList.add('hidden');
    }
    function handleThemeToggle() {
      let theme = localStorage.getItem('theme');
      if (theme === 'dark') {
        localStorage.setItem('theme', 'light');
        document.getElementById('sun')?.classList.remove('hidden');
        document.getElementById('moon')?.classList.add('hidden');
        document.body.classList.remove('dark');
        return;
      }
      document.getElementById('sun')?.classList.add('hidden');
      document.body.classList.add('dark');
      document.getElementById('moon')?.classList.remove('hidden');
      localStorage.setItem('theme', 'dark');
    }
  </script>
</html>
